package com.servicingportal.entity;
// Generated Mar 1, 2019 9:23:01 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employeemanagefservice generated by hbm2java
 */
@Entity
@Table(name = "employeemanagefservice", catalog = "servicingportaldb")
public class EmployeeManageFservice implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer emfid;
	private EmployeeAccount employeeaccountByEmpManageId;
	private EmployeeAccount employeeaccountByCreateBy;
	private EmployeeAccount employeeaccountByInActiveBy;
	private FieldService fieldservice;
	private Date createDate;
	private boolean isActive;

	public EmployeeManageFservice() {
	}

	public EmployeeManageFservice(EmployeeAccount employeeaccountByEmpManageId,
			EmployeeAccount employeeaccountByCreateBy, EmployeeAccount employeeaccountByInActiveBy,
			FieldService fieldservice, Date createDate, boolean isActive) {
		this.employeeaccountByEmpManageId = employeeaccountByEmpManageId;
		this.employeeaccountByCreateBy = employeeaccountByCreateBy;
		this.employeeaccountByInActiveBy = employeeaccountByInActiveBy;
		this.fieldservice = fieldservice;
		this.createDate = createDate;
		this.isActive = isActive;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EMFID", unique = true, nullable = false)
	public Integer getEmfid() {
		return this.emfid;
	}

	public void setEmfid(Integer emfid) {
		this.emfid = emfid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EmpManageID", nullable = false)
	public EmployeeAccount getEmployeeaccountByEmpManageId() {
		return this.employeeaccountByEmpManageId;
	}

	public void setEmployeeaccountByEmpManageId(EmployeeAccount employeeaccountByEmpManageId) {
		this.employeeaccountByEmpManageId = employeeaccountByEmpManageId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CreateBy", nullable = false)
	public EmployeeAccount getEmployeeaccountByCreateBy() {
		return this.employeeaccountByCreateBy;
	}

	public void setEmployeeaccountByCreateBy(EmployeeAccount employeeaccountByCreateBy) {
		this.employeeaccountByCreateBy = employeeaccountByCreateBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "InActiveBy", nullable = false)
	public EmployeeAccount getEmployeeaccountByInActiveBy() {
		return this.employeeaccountByInActiveBy;
	}

	public void setEmployeeaccountByInActiveBy(EmployeeAccount employeeaccountByInActiveBy) {
		this.employeeaccountByInActiveBy = employeeaccountByInActiveBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FServiceID", nullable = false)
	public FieldService getFieldservice() {
		return this.fieldservice;
	}

	public void setFieldservice(FieldService fieldservice) {
		this.fieldservice = fieldservice;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateDate", nullable = false, length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "IsActive", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

}
