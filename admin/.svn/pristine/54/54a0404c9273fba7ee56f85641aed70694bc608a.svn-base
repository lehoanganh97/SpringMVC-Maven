package com.blackhole.entities;
// Generated Mar 1, 2019 9:23:01 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Servicepost generated by hbm2java
 */
@Entity
@Table(name = "servicepost", catalog = "servicingportaldb")
public class ServicePost implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer servicePostId;
	private EmployeeAccount employeeaccount;
	private FieldService fieldservice;
	private PartnerAccount partneraccount;
	private boolean isAccept;
	private String servicePostTitle;
	private float servicePostRate;
	private String servicePostContent;
	private String servicePostContentOld;
	private String servicePostContentModify;
	private String servicePostDescription;
	private Date createDate;
	private boolean isModify;
	private Date modifyDate;
	private int isDelete;
	private Set<OrderService> orderservices = new HashSet<OrderService>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<ImageCategory> imagecategories = new HashSet<ImageCategory>(0);
	private Set<ServicePostDetail> servicepostdetails = new HashSet<ServicePostDetail>(0);

	public ServicePost() {
	}

	public ServicePost(FieldService fieldservice, PartnerAccount partneraccount, boolean isAccept,
			String servicePostTitle, float servicePostRate, Date createDate, boolean isModify, Date modifyDate,
			int isDelete) {
		this.fieldservice = fieldservice;
		this.partneraccount = partneraccount;
		this.isAccept = isAccept;
		this.servicePostTitle = servicePostTitle;
		this.servicePostRate = servicePostRate;
		this.createDate = createDate;
		this.isModify = isModify;
		this.modifyDate = modifyDate;
		this.isDelete = isDelete;
	}

	public ServicePost(EmployeeAccount employeeaccount, FieldService fieldservice, PartnerAccount partneraccount,
			boolean isAccept, String servicePostTitle, float servicePostRate, String servicePostContent,
			String servicePostContentOld, String servicePostContentModify, String servicePostDescription,
			Date createDate, boolean isModify, Date modifyDate, int isDelete, Set<OrderService> orderservices,
			Set<Comment> comments, Set<ImageCategory> imagecategories, Set<ServicePostDetail> servicepostdetails) {
		this.employeeaccount = employeeaccount;
		this.fieldservice = fieldservice;
		this.partneraccount = partneraccount;
		this.isAccept = isAccept;
		this.servicePostTitle = servicePostTitle;
		this.servicePostRate = servicePostRate;
		this.servicePostContent = servicePostContent;
		this.servicePostContentOld = servicePostContentOld;
		this.servicePostContentModify = servicePostContentModify;
		this.servicePostDescription = servicePostDescription;
		this.createDate = createDate;
		this.isModify = isModify;
		this.modifyDate = modifyDate;
		this.isDelete = isDelete;
		this.orderservices = orderservices;
		this.comments = comments;
		this.imagecategories = imagecategories;
		this.servicepostdetails = servicepostdetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ServicePostID", unique = true, nullable = false)
	public Integer getServicePostId() {
		return this.servicePostId;
	}

	public void setServicePostId(Integer servicePostId) {
		this.servicePostId = servicePostId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AcceptBy")
	public EmployeeAccount getEmployeeaccount() {
		return this.employeeaccount;
	}

	public void setEmployeeaccount(EmployeeAccount employeeaccount) {
		this.employeeaccount = employeeaccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FServiceID", nullable = false)
	public FieldService getFieldservice() {
		return this.fieldservice;
	}

	public void setFieldservice(FieldService fieldservice) {
		this.fieldservice = fieldservice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PartnerID", nullable = false)
	public PartnerAccount getPartneraccount() {
		return this.partneraccount;
	}

	public void setPartneraccount(PartnerAccount partneraccount) {
		this.partneraccount = partneraccount;
	}

	@Column(name = "IsAccept", nullable = false)
	public boolean isIsAccept() {
		return this.isAccept;
	}

	public void setIsAccept(boolean isAccept) {
		this.isAccept = isAccept;
	}

	@Column(name = "ServicePostTitle", nullable = false, length = 100)
	public String getServicePostTitle() {
		return this.servicePostTitle;
	}

	public void setServicePostTitle(String servicePostTitle) {
		this.servicePostTitle = servicePostTitle;
	}

	@Column(name = "ServicePostRate", nullable = false, precision = 12, scale = 0)
	public float getServicePostRate() {
		return this.servicePostRate;
	}

	public void setServicePostRate(float servicePostRate) {
		this.servicePostRate = servicePostRate;
	}

	@Column(name = "ServicePostContent", length = 65535)
	public String getServicePostContent() {
		return this.servicePostContent;
	}

	public void setServicePostContent(String servicePostContent) {
		this.servicePostContent = servicePostContent;
	}

	@Column(name = "ServicePostContentOld", length = 65535)
	public String getServicePostContentOld() {
		return this.servicePostContentOld;
	}

	public void setServicePostContentOld(String servicePostContentOld) {
		this.servicePostContentOld = servicePostContentOld;
	}

	@Column(name = "ServicePostContentModify", length = 65535)
	public String getServicePostContentModify() {
		return this.servicePostContentModify;
	}

	public void setServicePostContentModify(String servicePostContentModify) {
		this.servicePostContentModify = servicePostContentModify;
	}

	@Column(name = "ServicePostDescription", length = 500)
	public String getServicePostDescription() {
		return this.servicePostDescription;
	}

	public void setServicePostDescription(String servicePostDescription) {
		this.servicePostDescription = servicePostDescription;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateDate", nullable = false, length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "IsModify", nullable = false)
	public boolean isIsModify() {
		return this.isModify;
	}

	public void setIsModify(boolean isModify) {
		this.isModify = isModify;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifyDate", nullable = false, length = 19)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Column(name = "isDelete", nullable = false)
	public int getIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(int isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servicepost")
	public Set<OrderService> getOrderservices() {
		return this.orderservices;
	}

	public void setOrderservices(Set<OrderService> orderservices) {
		this.orderservices = orderservices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servicepost")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servicepost")
	public Set<ImageCategory> getImagecategories() {
		return this.imagecategories;
	}

	public void setImagecategories(Set<ImageCategory> imagecategories) {
		this.imagecategories = imagecategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servicepost")
	public Set<ServicePostDetail> getServicepostdetails() {
		return this.servicepostdetails;
	}

	public void setServicepostdetails(Set<ServicePostDetail> servicepostdetails) {
		this.servicepostdetails = servicepostdetails;
	}

}
